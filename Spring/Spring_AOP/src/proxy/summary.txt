总结：
通过JDK动态代理或者Cglib技术实现了横切逻辑的编入，但是还有几个缺点：

1 ： 为所有方法都织入了横切逻辑，有时候我们只希望对一些特定方法实现这种功能

2 ： 我们通过硬编码的方式指定了织入横切逻辑的织入点，即在目标业务方法的开始和结束前织入编码。

3 ： 手工创建动态代理类，需要不同的代理对象时，分别需要编写相应的代码，没有通用性。

针对以上问题，提出来以下解决方法：

1 ：用切点来指定具体方法

2 ：通过Advice描述横切逻辑和方法的具体织入点

3 ：通过切面将以上两者相结合